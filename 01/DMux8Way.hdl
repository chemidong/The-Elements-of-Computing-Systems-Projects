// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Put your code here:
    Not(in=sel[0],out=ns0);
    Not(in=sel[1],out=ns1);
    Not(in=sel[2],out=ns2);

    And(a=ns0,b=ns1,out=sa0);
    And(a=sa0,b=ns2,out=sa1);
    And(a=sa1,b=in,out=a);

    And(a=sel[0],b=ns1,out=sb0);
    And(a=sb0,b=ns2,out=sb1);
    And(a=sb1,b=in,out=b);

    And(a=ns0,b=sel[1],out=sc0);
    And(a=sc0,b=ns2,out=sc1);
    And(a=sc1,b=in,out=c);

    And(a=sel[0],b=sel[1],out=sd0);
    And(a=sd0,b=ns2,out=sd1);
    And(a=sd1,b=in,out=d);

    And(a=ns0,b=ns1,out=se0);
    And(a=se0,b=sel[2],out=se1);
    And(a=se1,b=in,out=e);

    And(a=sel[0],b=ns1,out=sf0);
    And(a=sf0,b=sel[2],out=sf1);
    And(a=sf1,b=in,out=f);

    And(a=ns0,b=sel[1],out=sg0);
    And(a=sg0,b=sel[2],out=sg1);
    And(a=sg1,b=in,out=g);

    And(a=sel[0],b=sel[1],out=sh0);
    And(a=sh0,b=sel[2],out=sh1);
    And(a=sh1,b=in,out=h);    
}